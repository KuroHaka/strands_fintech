# -*- coding: utf-8 -*-
"""OCR_billing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1slxzLqU5auTvaDHwAoRnpRBY-e3Pjym8
"""

def upload_files():
  from google.colab import files
  uploaded = files.upload()
  for k, v in uploaded.items():
    open(k, 'wb').write(v)
  return list(uploaded.keys())
upload_files()

from PIL import Image

im = Image.open("reciept.jpg")
im=im.rotate(270, expand=True)
im.show()
im.save('rotated.jpg')

""" ! pip install pytesseract
! pip install opencv-python

!sudo apt-get update
!sudo apt-get install tesseract-ocr
!sudo apt-get install libtesseract-dev """

import cv2
import pytesseract
import numpy as np

img = cv2.imread("factura_saltbae.jpg")
# img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
# img = cv2.adaptiveThreshold(img, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 3, 15)

rgb_planes = cv2.split(img)

result_planes = []
result_norm_planes = []
for plane in rgb_planes:
    dilated_img = cv2.dilate(plane, np.ones((7,7), np.uint8))
    bg_img = cv2.medianBlur(dilated_img, 21)
    diff_img = 255 - cv2.absdiff(plane, bg_img)
    norm_img = cv2.normalize(diff_img,None, alpha=0, beta=255, norm_type=cv2.NORM_MINMAX, dtype=cv2.CV_8UC1)
    result_planes.append(diff_img)
    result_norm_planes.append(norm_img)
    
result = cv2.merge(result_planes)
result_norm = cv2.merge(result_norm_planes)

img_def = cv2.cvtColor(result_norm, cv2.COLOR_BGR2GRAY)

text = pytesseract.image_to_string(img_def)
print(text)

im_pil = Image.fromarray(result_norm)
im_pil.show()

import re

item_pattern  = re.compile("\d+ .+ \d+\.\d{2}")
units_pattern = re.compile("^\d+")
price_pattern = re.compile("\d+\.\d{2}$")


def product_parser(taco):
    res = []
    for line in taco.split("\n"):
        if item_pattern.fullmatch(line):
            print(line)
            str_units = units_pattern.match(line).group(0)
            str_price = price_pattern.search(line).group(0)
            product_name = line[len(str_units)+1:len(line)-len(str_price)-1]
            units = int(str_units)
            price = float(str_price)
            product_instance = {
                "productName":product_name,
                "price":price,
                "currency":"USD",
                "users": [],
                "units": units
            }
            res.append(product_instance)
    return res